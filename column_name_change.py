# -*- coding: utf-8 -*-
"""
Created on Mon Dec 16 12:33:36 2024

@author: P70073624
"""

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

table = '{"jaar", "Year"}, {"patientgroep", "Patient_Group"}, {"Provincie", "Province"}, {"geslacht", "Sex"}, {"leeftijdsklasse", "Age Group"}, {"dialysevorm", "Dialysis modality"}, {"dialysevorm_sub", "Dialysis modality sublevel"}, {"prevalentie_abs", "absolute_patients_EOY"}, {"prevalentie_rel", "Insured_patients_per_million_insured"}, {"prevalentie_rel_std", "Insured_patients_per_million_insured_standardised_by_age_gender"}, {"incidentie_dag1_abs", "absolute_patients_starting_dialysis"}, {"incidentie_dag1_rel", "patients_starting_dialysis_per_million_insured"}, {"incidentie_dag1_rel_std", "patients_starting_dialysis_per_million_insured_standardised_by_age_and_gender"}, {"incidentie_dag91_abs", "absolute_patients_starting_dialysis_survive_90_days"}, {"incidentie_dag91_rel", "patients_starting_dialysis_survive_90_days_per_million_insured"}, {"incidentie_dag91_rel_std", "patients_starting_dialysis_survive_90_days_per_million_insured_standardised_by_age_and_gender"}, {"Aantal_patienten_kosten", "Number_patients_for_whom_cost_calculated"}, {"Zorgkosten_totaal", "Average_total_healthcare_costs"}, {"Zorgkosten_eerstelijns", "Average_primarycare_costs"}, {"Zorgkosten_medicatie", "Average_medication_costs"}, {"Zorgkosten_ziekenvervoer", "Average_transportation_costs"}, {"Zorgkosten_GGZ", "Average_mentalhealth_costs"}, {"Zorgkosten_overig", "Average_other_costs"}, {"Zorgkosten_DBC_RRT", "Average_specialist_RRT"}, {"Zorgkosten_DBC_overig", "Average_specialist_except_RRT"}, {"Zorgkosten_DBC_totaal", "Average_total_specialist_costs"}, {"Noemer_overige_themas", "Number_patients_denominator_next columns"}, {"Aantal_specialist", "#_visit_specialist"}, {"Pct_specialist", "%_visit_specialist"}, {"Aantal_cardioloog", "#_visit_cardiologist"}, {"Pct_cardioloog", "%_visit_cardiologist"}, {"Aantal_internist", "#_visit_internist"}, {"Pct_internist", "%_visit_internist"}, {"Aantal_dermatoloog", "#_visit_dermatologist"}, {"Pct_dermatoloog", "%_visit_dermatologist"}, {"Aantal_chirurg", "#_visit_surgeon"}, {"Pct_chrirug", "%_visit_surgeon"}, {"Aantal_fysiotherapeut", "#_visit_physiotherapist"}, {"Pct_fysiotherapeut", "%_visit_physiotherapist"}, {"Aantal_dietist", "#_visit_dietitician"}, {"pct_dietist", "%_visit_dietitician"}, {"Aantal_shuntinterventies", "#_shunt_intervention"}, {"Pct_shuntinterventies", "%_shunt_intervention"}, {"Aantal_screening_transplantatie", "#_screening_transplantation"}, {"Pct_screening_transplantatie", "%_screening_transplantation"}, {"Aantal_intensive_care", "#_intensive_care"}, {"Pct_intensive_care", "%_intensive_care"}, {"Aantal_dialyse_intensive_care", "#_dialysis_intensive_care"}, {"Pct_dialyse_intensive_care", "%_dialysis_intensive_care"}, {"Aantal_antihypertensiva_RAAS", "#_RAAS"}, {"Pct_antihypertensiva_RAAS", "%_RAAS"}, {"Aantal_antihyp_ACE_remmers", "#_ACE_inhibitors"}, {"Pct_antihyp_ACE_remmers", "%_ACE_inhibitors"}, {"Aantal_diabetesmed_insuline", "#_insulin_diabetes"}, {"Pct_diabetesmed_insuline", "%_insulin_diabetes"}, {"Aantal_diabetesmed_overig", "#_other_med_diabetes"}, {"Pct_diabetesmed_overig", "%_other_med_diabetes"}, {"Aantal_lipid_statine", "#_statins"}, {"Pct_lipid_statine", "%_statins"}, {"Aantal_lipid_overig", "#_other_lip_lowering_agents"}, {"Pct_lipid_overig", "%_other_lip_lowering_agents"}, {"Aantal_antidepressiva", "#_antidepressants"}, {"Pct_antidepressiva", "%_antidepressants"}, {"Aantal_slaapmedicatie", "#_sleep_medication"}, {"Pct_slaapmedicatie", "%_sleep_medication"}, {"Aantal_antistolling", "#_anticoagulants"}, {"Pct_antistolling", "%_anticoagulants"}, {"Aantal_overlijden", "#_dead"}, {"pct_overlijden", "%_dead"}, {"Aantal_procedure_vaatlijden", "#_PVD_procedure"}, {"Pct_procedure_vaatlijden", "%_PVD_procedure"}, {"Aantal_SEH", "#_emergency_dept"}, {"pct_seh", "%_emergency_dept"}, {"Aantal_polikliniek", "#_outpatient"}, {"Pct_polikliniek", "%_outpatient"}, {"Aantal_opname", "#_admitted"}, {"pct_opname", "%_admitted"}, {"Aantal_diabetes", "#_diabetic_patients"}, {"Pct_diabetes", "%_diabetic_patients"}, {"Aantal_maligniteit", "#_cancer_patients"}, {"pct_maligniteit", "%_cancer_patients"}, {"Aantal_macrovasculair", "#_MVD"}, {"pct_macrovasculair", "%_MVD"}, {"Aantal_coronair", "#_CVD"}, {"pct_coronair", "%_CVD"}, {"Aantal_perif_art_vaatl", "#_PAVD"}, {"Pct_perif_art_vaatl", "%_PAVD"}, {"Aantal_CVA_TIA", "#_CVA_TIA"}, {"Pct_CVA_TIA", "%_CVA_TIA"}, {"Aantal_hypertensie", "#_hypertension"}, {"pct_hypertensie", "%_hypertension"}'
table_formatted = table.replace("{", "").replace("}", "").replace('"','')
table_formatted = table_formatted.split(",")
df = pd.DataFrame(index = np.arange(int(len(table_formatted)/2)), columns = ["Old_column_name", "New_column_name"])

for i in range(len(table_formatted)):
    if i % 2 == 0:
        df.iloc[i//2, 0] = table_formatted[i]
    else:
        df.iloc[i//2, 1] = table_formatted[i]
        
df.to_excel('column_name_change.xlsx')